//////////////////////////////////////////////////////////////////////
// (c) Janusz Ganczarski
// http://www.januszg.hg.pl
// JanuszG@enter.net.pl
//////////////////////////////////////////////////////////////////////

#ifndef __TEXT__H__
#define __TEXT__H__

#include <string>
#include <glm/glm.hpp>
#include "shader_stuff.h"

//////////////////////////////////////////////////////////////////////
// inicjacja mechanizm�w u�ywanych podczas renderingu tekstu
//////////////////////////////////////////////////////////////////////
void InitDrawText();

//////////////////////////////////////////////////////////////////////
// funkcja rysuj�ca napis w wybranym miejscu
// x, y - wsp�rz�dne okienkowe pocz�tku napisu
// str - tekst napisu
// color - kolor napisu, domy�lnie czarny
//////////////////////////////////////////////////////////////////////
void DrawText8x16( const int x, const int y, const std::string &str,
                   const glm::vec4 &color = glm::vec4( 0.0f, 0.0f, 0.0f, 1.0f ) );

//////////////////////////////////////////////////////////////////////
// usuni�cie mechanizm�w u�ywanych podczas renderingu tekstu
//////////////////////////////////////////////////////////////////////
void DeleteDrawText();

#endif // __TEXT__H__

//////////////////////////////////////////////////////////////////////
// (c) Janusz Ganczarski
// http://www.januszg.hg.pl
// JanuszG@enter.net.pl
//////////////////////////////////////////////////////////////////////

#ifndef __CP1250_H__
#define __CP1250_H__

//////////////////////////////////////////////////////////////////////
// microsoft-cp1250 charset font
// generated with /usr/bin/bdfassemble cp1250.txt
// on 1998-06-26 by czyborra@cs.tu-berlin.de
// http://czyborra.com/charsets/cp1250.bdf.gz
// FONT -misc-fixed-medium-r-normal--16-160-75-75-c-80-microsoft-cp1250
//////////////////////////////////////////////////////////////////////
const unsigned char font8x16CP1250[224][16] =
{
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x00 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x22 ,0x22 ,0x22 ,0x22 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x48 ,0x48 ,0x48 ,0x7e ,0x24 ,0x24,
        0x7e ,0x12 ,0x12 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x3e ,0x49 ,0x09 ,0x0e ,0x38,
        0x48 ,0x49 ,0x3e ,0x08 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x46 ,0x29 ,0x29 ,0x16 ,0x08 ,0x08,
        0x34 ,0x4a ,0x4a ,0x31 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x39 ,0x46 ,0x42 ,0x45 ,0x39 ,0x1c,
        0x22 ,0x22 ,0x22 ,0x1c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x00 ,0x00
    },
    {
        0x00 ,0x04 ,0x08 ,0x08 ,0x10 ,0x10 ,0x10 ,0x10,
        0x10 ,0x10 ,0x08 ,0x08 ,0x04 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x20 ,0x10 ,0x10 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x10 ,0x10 ,0x20 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x08 ,0x49 ,0x2a ,0x1c ,0x2a,
        0x49 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x7f ,0x08,
        0x08 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x10 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x18 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x20 ,0x10 ,0x10 ,0x08,
        0x08 ,0x04 ,0x02 ,0x02 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x18 ,0x24 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x24 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x28 ,0x18 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x20 ,0x10 ,0x0c,
        0x02 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x02 ,0x02 ,0x1c,
        0x02 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x04 ,0x04 ,0x04 ,0x7e ,0x44 ,0x44,
        0x24 ,0x14 ,0x0c ,0x04 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x02 ,0x02 ,0x02 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x7c,
        0x40 ,0x40 ,0x20 ,0x1c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x04 ,0x04,
        0x04 ,0x02 ,0x02 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x3c,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x38 ,0x04 ,0x02 ,0x02 ,0x02 ,0x3e,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x18 ,0x18 ,0x00 ,0x00 ,0x00,
        0x18 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x10 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x00,
        0x18 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x02 ,0x04 ,0x08 ,0x10 ,0x20 ,0x10,
        0x08 ,0x04 ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x00 ,0x00 ,0x00,
        0x7e ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x20 ,0x10 ,0x08 ,0x04 ,0x08,
        0x10 ,0x20 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x00 ,0x08 ,0x08 ,0x04,
        0x02 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x1e ,0x20 ,0x4e ,0x52 ,0x52 ,0x52,
        0x56 ,0x4a ,0x22 ,0x1c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7c ,0x42 ,0x42 ,0x42 ,0x42 ,0x7c,
        0x42 ,0x42 ,0x42 ,0x7c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x40 ,0x40 ,0x40,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x78 ,0x44 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x44 ,0x78 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x4e ,0x40,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x3e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x38 ,0x44 ,0x44 ,0x04 ,0x04 ,0x04,
        0x04 ,0x04 ,0x04 ,0x1f ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x44 ,0x48 ,0x50 ,0x60 ,0x60,
        0x50 ,0x48 ,0x44 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x40,
        0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x5a ,0x5a,
        0x66 ,0x66 ,0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x46 ,0x46 ,0x4a ,0x4a ,0x52,
        0x52 ,0x62 ,0x62 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x42 ,0x42 ,0x42 ,0x7c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x03 ,0x3c ,0x66 ,0x5a ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x44 ,0x44 ,0x48 ,0x7c,
        0x42 ,0x42 ,0x42 ,0x7c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x02 ,0x0c ,0x30,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x7f ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x14 ,0x14 ,0x22 ,0x22,
        0x22 ,0x41 ,0x41 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x66 ,0x66 ,0x5a ,0x5a,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x24 ,0x24 ,0x18 ,0x18,
        0x24 ,0x24 ,0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x14,
        0x22 ,0x22 ,0x41 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x20 ,0x10 ,0x08,
        0x04 ,0x02 ,0x02 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x0e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x08 ,0x0e ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x02 ,0x02 ,0x04 ,0x08 ,0x08 ,0x10,
        0x10 ,0x20 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x70 ,0x10 ,0x10 ,0x10 ,0x10 ,0x10 ,0x10,
        0x10 ,0x10 ,0x10 ,0x10 ,0x70 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x42 ,0x24 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x7f ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x08 ,0x10 ,0x10 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x5c ,0x62 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x40 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x46 ,0x3a ,0x02 ,0x02 ,0x02 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x7e ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x10 ,0x10 ,0x10 ,0x10 ,0x10 ,0x10,
        0x7c ,0x10 ,0x10 ,0x10 ,0x0c ,0x00 ,0x00 ,0x00
    },
    {
        0x3c ,0x42 ,0x42 ,0x3c ,0x20 ,0x38 ,0x44 ,0x44,
        0x44 ,0x3a ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x18 ,0x00 ,0x08 ,0x08 ,0x00 ,0x00 ,0x00
    },
    {
        0x30 ,0x48 ,0x04 ,0x04 ,0x04 ,0x04 ,0x04 ,0x04,
        0x04 ,0x0c ,0x00 ,0x04 ,0x04 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x44 ,0x48 ,0x50 ,0x60 ,0x50,
        0x48 ,0x44 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x49 ,0x49 ,0x49 ,0x49 ,0x49 ,0x49,
        0x49 ,0x76 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x40 ,0x40 ,0x5c ,0x62 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x02 ,0x02 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x46 ,0x3a ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x40 ,0x40 ,0x40 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x02 ,0x0c ,0x30 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x0c ,0x10 ,0x10 ,0x10 ,0x10 ,0x10,
        0x10 ,0x7c ,0x10 ,0x10 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x18 ,0x18 ,0x24 ,0x24 ,0x24 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x36 ,0x49 ,0x49 ,0x49 ,0x49 ,0x49,
        0x49 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x24 ,0x18 ,0x18 ,0x24,
        0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x3c ,0x02 ,0x02 ,0x1a ,0x26 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x20 ,0x10 ,0x08 ,0x04,
        0x02 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x0c ,0x10 ,0x10 ,0x08 ,0x08 ,0x10 ,0x10,
        0x08 ,0x08 ,0x10 ,0x10 ,0x0c ,0x00 ,0x00 ,0x00
    },
    {
        0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x00 ,0x00
    },
    {
        0x00 ,0x30 ,0x08 ,0x08 ,0x10 ,0x10 ,0x08 ,0x08,
        0x10 ,0x10 ,0x08 ,0x08 ,0x30 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x46 ,0x49 ,0x31 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x0c ,0x12 ,0x20 ,0x20 ,0x7c ,0x20,
        0x7c ,0x20 ,0x12 ,0x0c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x10 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x44 ,0x22 ,0x22 ,0x66 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x49 ,0x49 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x1c ,0x08,
        0x2a ,0x7f ,0x2a ,0x08 ,0x1c ,0x08 ,0x00 ,0x00
    },
    {
        0x00 ,0x08 ,0x1c ,0x08 ,0x2a ,0x7f ,0x2a ,0x08,
        0x08 ,0x2a ,0x7f ,0x2a ,0x08 ,0x1c ,0x08 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x8a ,0x55 ,0x55 ,0x2a ,0x10 ,0x10,
        0x48 ,0xa4 ,0xa4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x02 ,0x0c ,0x30,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x02 ,0x02 ,0x04 ,0x04 ,0x08 ,0x08,
        0x04 ,0x04 ,0x02 ,0x02 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x02 ,0x0c ,0x30,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x7f ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x20 ,0x10 ,0x08,
        0x04 ,0x02 ,0x02 ,0x7e ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x20 ,0x10 ,0x08,
        0x04 ,0x02 ,0x02 ,0x7e ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x18 ,0x10 ,0x10 ,0x08 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x10 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x66 ,0x44 ,0x44 ,0x22 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x44 ,0x22 ,0x22 ,0x66 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x38 ,0x7c ,0x7c ,0x7c,
        0x38 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3c ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x29 ,0x2b ,0x2f ,0x79 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x02 ,0x0c ,0x30 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x20 ,0x20 ,0x10 ,0x10,
        0x20 ,0x20 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x0c ,0x30 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x0c ,0x10 ,0x10 ,0x10 ,0x10 ,0x10,
        0x10 ,0x7c ,0x10 ,0x10 ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x20 ,0x10 ,0x08 ,0x04,
        0x02 ,0x7e ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x20 ,0x10 ,0x08 ,0x04,
        0x02 ,0x7e ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3c ,0x42 ,0x42
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0xc0 ,0x60,
        0x50 ,0x48 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x42 ,0x24 ,0x3c ,0x24 ,0x24,
        0x3c ,0x24 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x03 ,0x04 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x00 ,0x00,
        0x08 ,0x08 ,0x08 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x02 ,0x3c ,0x42 ,0x42,
        0x3c ,0x40 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x24
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x99 ,0xa5 ,0xa1 ,0xa1,
        0xa5 ,0x99 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x30 ,0x08 ,0x3c ,0x42 ,0x42 ,0x02 ,0x0c ,0x30,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x12 ,0x12 ,0x24 ,0x24 ,0x48 ,0x24,
        0x24 ,0x12 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0xa5 ,0xa9 ,0xb9 ,0xa5,
        0xa5 ,0xb9 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x20 ,0x10 ,0x08,
        0x04 ,0x02 ,0x02 ,0x7e ,0x00 ,0x00 ,0x10 ,0x10
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x28 ,0x28 ,0x10
    },
    {
        0x00 ,0x00 ,0x00 ,0x7f ,0x00 ,0x08 ,0x08 ,0x08,
        0x7f ,0x08 ,0x08 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x06 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x28 ,0x18,
        0x0c ,0x0a ,0x08 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x20 ,0x20 ,0x2a ,0x36 ,0x22 ,0x22 ,0x22 ,0x22,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x0e ,0x0a ,0x0a ,0x0a ,0x0a ,0x0a ,0x3a,
        0x7a ,0x7a ,0x7a ,0x7a ,0x3e ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x18,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x30 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x03 ,0x04 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x30 ,0x08 ,0x3c ,0x42 ,0x02 ,0x0c ,0x30 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x48 ,0x48 ,0x24 ,0x24 ,0x12 ,0x24,
        0x24 ,0x48 ,0x48 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x40,
        0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x33
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x20 ,0x10 ,0x08 ,0x04,
        0x02 ,0x7e ,0x00 ,0x00 ,0x10 ,0x10 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x44 ,0x44 ,0x48 ,0x7c,
        0x42 ,0x42 ,0x42 ,0x7c ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x00 ,0x24 ,0x18
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x3c ,0x42 ,0x42
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x7e ,0x42,
        0x42 ,0x24 ,0x24 ,0x18 ,0x00 ,0x00 ,0x24 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x40,
        0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x60 ,0x18
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x40 ,0x40 ,0x40,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x30 ,0x08 ,0x3c ,0x42 ,0x42 ,0x40 ,0x40 ,0x40,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x40 ,0x40 ,0x40,
        0x40 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x06 ,0x08 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x24 ,0x24
    },
    {
        0x00 ,0x00 ,0x7e ,0x40 ,0x40 ,0x40 ,0x40 ,0x7c,
        0x40 ,0x40 ,0x40 ,0x7e ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x3e ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x3e ,0x00 ,0x00 ,0x24 ,0x18
    },
    {
        0x00 ,0x00 ,0x78 ,0x44 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x44 ,0x78 ,0x00 ,0x00 ,0x30 ,0x48
    },
    {
        0x00 ,0x00 ,0x78 ,0x44 ,0x42 ,0x42 ,0x42 ,0xf2,
        0x42 ,0x42 ,0x44 ,0x78 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x46 ,0x46 ,0x4a ,0x4a ,0x52,
        0x52 ,0x62 ,0x62 ,0x42 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x42 ,0x46 ,0x46 ,0x4a ,0x4a ,0x52,
        0x52 ,0x62 ,0x62 ,0x42 ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x18
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x44 ,0x33
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x24
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x42 ,0x24 ,0x18 ,0x24,
        0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x44 ,0x44 ,0x48 ,0x7c,
        0x42 ,0x42 ,0x42 ,0x7c ,0x00 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x18 ,0x24 ,0x18
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x44 ,0x33
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x42 ,0x42 ,0x00 ,0x00 ,0x24 ,0x24
    },
    {
        0x00 ,0x00 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x14,
        0x22 ,0x22 ,0x41 ,0x41 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x30 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x7f ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x5c ,0x62 ,0x42 ,0x42 ,0x42 ,0x7c,
        0x44 ,0x44 ,0x44 ,0x38 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x40 ,0x40 ,0x40 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x3e ,0x02,
        0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x08 ,0x08 ,0x18 ,0x00 ,0x00 ,0x30 ,0x0c
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x40 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x30 ,0x08 ,0x3c ,0x42 ,0x40 ,0x40 ,0x40 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x40 ,0x40,
        0x42 ,0x3c ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x7e ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x0c ,0x10 ,0x3c ,0x42 ,0x40 ,0x40 ,0x7e ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x7e ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x40 ,0x40 ,0x7e ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x18 ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3e ,0x08 ,0x08 ,0x08 ,0x08 ,0x08,
        0x08 ,0x18 ,0x00 ,0x00 ,0x24 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x46 ,0x3a ,0x02 ,0x02 ,0x02 ,0x00 ,0x18 ,0x24
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x46 ,0x3a ,0x02 ,0x02 ,0x0f ,0x02 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x44 ,0x33 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3c ,0x42 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x3c ,0x00 ,0x00 ,0x24 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x18 ,0x00 ,0x00 ,0x7e ,0x00,
        0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x40 ,0x40 ,0x40 ,0x40 ,0x40 ,0x42,
        0x62 ,0x5c ,0x00 ,0x00 ,0x18 ,0x24 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x18 ,0x24 ,0x18 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x44 ,0x33 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x3a ,0x46 ,0x42 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x24 ,0x24 ,0x00 ,0x00
    },
    {
        0x3c ,0x02 ,0x02 ,0x1a ,0x26 ,0x42 ,0x42 ,0x42,
        0x42 ,0x42 ,0x00 ,0x00 ,0x30 ,0x0c ,0x00 ,0x00
    },
    {
        0x30 ,0x08 ,0x0c ,0x10 ,0x10 ,0x10 ,0x10 ,0x10,
        0x10 ,0x7c ,0x10 ,0x10 ,0x00 ,0x00 ,0x00 ,0x00
    },
    {
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
        0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x10
    }
};

#endif // __CP1250_H__

//////////////////////////////////////////////////////////////////////
// (c) Janusz Ganczarski
// http://www.januszg.hg.pl
// JanuszG@enter.net.pl
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
// identyfikator obiektu programu
//////////////////////////////////////////////////////////////////////
GLuint textProgram = 0;

//////////////////////////////////////////////////////////////////////
// identyfikator obiektu bufora z danymi tablic wierzcho�k�w
//////////////////////////////////////////////////////////////////////
GLuint textBuffer = 0;

//////////////////////////////////////////////////////////////////////
// identyfikator obiektu tablic wierzcho�k�w
//////////////////////////////////////////////////////////////////////
GLuint textVertexArray = 0;

//////////////////////////////////////////////////////////////////////
// numery po�o�enia poszczeg�lnych atrybut�w wierzcho�k�w
//////////////////////////////////////////////////////////////////////
#define POSITION 0

//////////////////////////////////////////////////////////////////////
// po�o�enie danych wsp�rz�dnych punkt�w poszczeg�lnych znak�w
// w buforze; dane znak�w zaczynaj� si� od spacji
//////////////////////////////////////////////////////////////////////
int textPositions[224];

//////////////////////////////////////////////////////////////////////
// liczba danych wsp�rz�dnych punkt�w poszczeg�lnych znak�w
// w buforze; dane znak�w zaczynaj� si� od spacji
//////////////////////////////////////////////////////////////////////
int textSizes[224];

//////////////////////////////////////////////////////////////////////
// inicjacja mechanizm�w u�ywanych podczas renderingu tekstu
//////////////////////////////////////////////////////////////////////
void InitDrawText()
{
    // wczytanie i przygotowanie obs�ugi programu rysuj�cego napisy
    if( !textProgram )
    {
        textProgram = glCreateProgram();
        glAttachShader( textProgram, LoadShader( GL_VERTEX_SHADER, "text_vs.glsl" ) );
        glAttachShader( textProgram, LoadShader( GL_FRAGMENT_SHADER, "text_fs.glsl" ) );
        LinkAndValidateProgram( textProgram );
    }

    // obiekt tablic wierzcho�k�w z buforem tablic wierzcho�k�w
    // na wsp�rz�dne punkt�w z tekstem (bez �adowania danych)
    if( !textBuffer && !textVertexArray )
    {
        // maksymalnia pojemno�� bufora na dane wsp�rz�dnych punkt�w
        const int MAX_BUF = 8912;

        // bufor wsp�rz�dnych punkt�w
        GLfloat buf[MAX_BUF];

        // po�o�enie bie��cych danych w buforze wsp�rz�dnych punkt�w
        int bufPos = 0;

        // generowanie poszczeg�lnych liter, pocz�wszy od spacji
        for( unsigned int i = 0; i < 224 && bufPos < MAX_BUF; i++ )
        {
            // po�o�enie danych w buforze; warto�� dzielimy przez 2,
            // bowiem po�o�enie ka�dego wierzcho�ka opisuj� dwie wsp�rz�dne
            textPositions[i] = bufPos/2;

            // przygotowanie danych pojedynczego znaku
            for( int row = 0; row < 16; row++ )
            {
                // pobranie danych pojedynczego wiersza pikseli w znaku
                // (dane znak�w zaczynaj� si� od spacji)
                const unsigned int chr = font8x16CP1250[i][row];
                for( int col = 0; col < 8; col++ )
                {
                    // test obecno�ci poszczeg�lnych bit�w oraz test pojemo�ci bufora
                    if( ((chr >> col) & 0x01) == 0x01 && bufPos < MAX_BUF - 2 )
                    {
                        buf[bufPos + 0] = static_cast< GLfloat >( 7 - col );
                        buf[bufPos + 1] = static_cast< GLfloat >( row );
                        bufPos += 2;
                    }
                }
            }

            // rozmiar danych w buforze; warto�� dzielimy przez 2,
            // bowiem po�o�enie ka�dego wierzcho�ka opisuj� dwie wsp�rz�dne
            textSizes[i] = bufPos/2 - textPositions[i];
        }

        // generowanie identyfikatora obiektu tablic wierzcho�k�w
        glGenVertexArrays( 1, &textVertexArray );

        // utworzenie obiektu tablic wierzcho�k�w
        glBindVertexArray( textVertexArray );

        // generowanie VBO
        glGenBuffers( 1, &textBuffer );
        glBindBuffer( GL_ARRAY_BUFFER, textBuffer );
        glBufferData( GL_ARRAY_BUFFER, bufPos * sizeof( GLfloat ), buf, GL_STATIC_DRAW );
        glVertexAttribPointer( POSITION, 2, GL_FLOAT, GL_FALSE, 0, NULL );
        glEnableVertexAttribArray( POSITION );

        // wy��czenie obiektu tablic wierzcho�k�w
        glBindVertexArray( 0 );
    }
}

//////////////////////////////////////////////////////////////////////
// funkcja rysuj�ca napis w wybranym miejscu
// x, y - wsp�rz�dne okienkowe pocz�tku napisu
// str - tekst napisu
// color - kolor napisu, domy�lnie czarny
//////////////////////////////////////////////////////////////////////
void DrawText8x16( const int x, const int y, const std::string &str,
                   const glm::vec4 &color )
{
    // pobranie rozmiar�w okna renderingu
    GLint viewport[4];
    glGetIntegerv( GL_VIEWPORT, viewport );

    // przygotowanie macierzy rzutowania prostok�tnego 2D; wykorzystujemy
    // wy��cznie macierz rzutowania, bowiem macierz modelu-widoku jest
    // w tym przypadku macierz� jednostkow�
    glm::mat4x4 projectionMatrix( glm::ortho( 0.0f, static_cast<GLfloat>( viewport[2] ), 0.0f, static_cast<GLfloat>( viewport[3] ) ) );

    // sprawdzenie czy w��czone jest generowanie wielko�ci punktu w shaderze
    GLboolean programPointSize = glIsEnabled( GL_PROGRAM_POINT_SIZE );
    if( programPointSize )
        glDisable( GL_PROGRAM_POINT_SIZE );

    // rozmiar punkt�w
    glPointSize( 1.2f );

    // w��czenie obiektu tablic wierzcho�k�w
    glBindVertexArray( textVertexArray );

    // w��czenie programu
    glUseProgram( textProgram );

    // za�adowanie zmiennych jednorodnych - iloczynu macierzy
    // modelu-widoku i rzutowania oraz koloru punktu
    glUniformMatrix4fv( glGetUniformLocation( textProgram, "modelViewProjectionMatrix" ), 1, GL_FALSE, glm::value_ptr( projectionMatrix ) );
    glUniform4fv( glGetUniformLocation( textProgram, "color" ), 1, glm::value_ptr( color ) );

    // rysowanie poszczeg�lnych liter
    for( unsigned int i = 0; i < str.length(); i++ )
    {
        // pobranie znaku
        const unsigned char ch = static_cast<unsigned char>( str[i] );

        // pomijamy spacj� i znaki steruj�ce
        if( ch > 32 )
        {
            // po�o�enie znaku
            glUniform2f( glGetUniformLocation( textProgram, "pos" ), static_cast<GLfloat>( x + i * 8 ), static_cast<GLfloat>( y ) );

            // narysowanie danych zawartych w tablicach wierzcho�k�w
            glDrawArrays( GL_POINTS, textPositions[ch -32], textSizes[ch - 32] );
        }
    }

    // wy��czenie programu
    glUseProgram( 0 );

    // // w��czenie obiektu tablic wierzcho�k�w
    glBindVertexArray( 0 );

    // w razie potrzeby w��czamy generowanie wielko�ci punktu w shaderze
    if( programPointSize )
        glEnable( GL_PROGRAM_POINT_SIZE );
}

//////////////////////////////////////////////////////////////////////
// usuni�cie mechanizm�w u�ywanych podczas renderingu tekstu
//////////////////////////////////////////////////////////////////////
void DeleteDrawText()
{
    // porz�dki
    glDeleteProgram( textProgram );
    glDeleteBuffers( 1, &textBuffer );
    glDeleteVertexArrays( 1, &textVertexArray );

    // wyzerowanie identyfikator�w i pozosta�ych zmiennych
    textProgram = 0;
    textBuffer = 0;
    textVertexArray = 0;
}

